openapi: 3.0.3
info:
  title: HEI Absence Management - OpenAPI 3.0
  description: This API allows users to manage the HEI absences.
  contact:
    email: hei.dera.932@gmail.com
  version: 1.0.11
servers:
  - url: localhost:8080
tags:
  - name: group
  - name: student
  - name: teaching_units
  - name: follow
  - name: course
  - name: absence
paths:
  /groups:
    post:
      tags:
        - group
      summary: Create a new group
      operationId: addGroup
      requestBody:
        description: Create a new group
        content:
          application/json:
            schema:
              type: object
              properties:
                  ref:
                    type: string
                    example: G1

        required: true
      responses:
        '200':
          description: OK
          content:
            string:
              example: Group added successfully!
        '400':
          description: Bad Request
        '500':
          description: Internal Server Error
    get:
      tags:
        - group
      summary: Show all groups
      operationId: showAllGroups
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Group'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Group'
        '500':
          description: Internal Server Error
  /groups/{id}:
    get:
      tags:
        - group
      summary: Find group by id
      operationId: findGroup
      parameters:
        - name: id
          in: path
          description: ID of group to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
            application/xml:
              schema:
                $ref: '#/components/schemas/Group'
        '500':
          description: Internal Server Error
    put:
      tags:
        - group
      summary: Update a group
      operationId: updateGroup
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        description: Update a group
        content:
          application/json:
            schema:
              type: object
              properties:
                ref:
                  type: string
                  example: G1
                creation_date:
                  type: string
                  format: date
      responses:
        '200':
          description: OK
          content:
            string:
              example: Group updated successfully!
        '400':
          description: Invalid value
        '404':
          description: Group not found
        '500':
          description: Internal Server Error
    delete:
      tags:
        - group
      summary: Delete group by ID
      operationId: deleteGroup
      parameters:
        - name: id
          in: path
          description: ID of group to delete
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            string:
              example: Group deleted successfully!
        '400':
          description: Invalid ID supplied
        '404':
          description: Group not found
        '500':
          description: Internal Server Error

  /students:
    post:
      tags:
        - student
      summary: Create a new student
      operationId: addStudent
      requestBody:
        description: Create a new student
        content:
          application/json:
            schema:
              type: object
              properties:
                first_name:
                  type: string
                  example: Dera
                last_name:
                  type: string
                  example: Daniel
                gender:
                  type: string
                  example: male
                ref:
                  type: string
                  example: STD22038
                email:
                  type: string
                  example: hei.dera@gmail.com
                phone:
                  type: string
                  example: 0340000000
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            string:
              example: Group added successfully!
        '405':
          description: Invalid input
        '500':
          description: Internal Server Error
    get:
      tags:
        - student
      summary: Show all students
      operationId: showAllStudents
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Student'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Student'
        '500':
          description: Internal Server Error
  /students/{id}:
    get:
      tags:
        - student
      summary: Find student by id
      operationId: findStudent
      parameters:
        - name: id
          in: path
          description: ID of student to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'
            application/xml:
              schema:
                $ref: '#/components/schemas/Student'
        '400':
          description: Invalid ID supplied
        '404':
          description: Student not found
        '500':
          description: Internal Server Error
    put:
      tags:
        - student
      summary: Update a student
      operationId: updateStudent
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        description: Update a student
        content:
          application/json:
            schema:
              type: object
              properties:
                first_name:
                  type: string
                  example: Dera
                last_name:
                  type: string
                  example: Daniel
                gender:
                  type: string
                  example: male
                ref:
                  type: string
                  example: STD22038
                email:
                  type: string
                  example: hei.dera@gmail.com
                phone:
                  type: string
                  example: 0340000000
      responses:
        '200':
          description: OK
          content:
            string:
              example: Student updated successfully!
        '400':
          description: Invalid value
        '404':
          description: Student not found
        '500':
          description: Internal Server Error
    delete:
      tags:
        - student
      summary: Delete student by ID
      operationId: deleteStudent
      parameters:
        - name: id
          in: path
          description: ID of student to delete
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            string:
              example: Student deleted successfully!
        '400':
          description: Invalid ID supplied
        '404':
          description: Student not found
        '500':
          description: Internal Server Error

  /teaching-units:
    post:
      tags:
        - teaching_units
      summary: Create a new teaching units
      operationId: addTeachingUnits
      requestBody:
        description: Create a new teaching units
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: WEB1
        required: true
      responses:
        '200':
          description: OK
          content:
            string:
              example: Group added successfully!
        '405':
          description: Invalid input
        '500':
          description: Internal Server Error
    get:
      tags:
        - teaching_units
      summary: Show all teaching units
      operationId: showAllTeachingUnits
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Teaching Units'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Teaching Units'
        '500':
          description: Internal Server Error
  /teaching-units/{id}:
    get:
      tags:
        - teaching_units
      summary: Find teaching units by id
      operationId: findTeachingUnits
      parameters:
        - name: id
          in: path
          description: ID of teaching units to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Teaching Units'
            application/xml:
              schema:
                $ref: '#/components/schemas/Teaching Units'
        '400':
          description: Invalid ID supplied
        '404':
          description: Teaching Units not found
        '500':
          description: Internal Server Error
    put:
      tags:
        - teaching_units
      summary: Update a teaching units
      operationId: updateTeachingUnits
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: Update a teaching units
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: WEB1
        required: true
      responses:
        '200':
          description: OK
          content:
            string:
              example: Teaching Units updated successfully!
        '400':
          description: Invalid value
        '404':
          description: Teaching Units not found
        '500':
          description: Internal Server Error
    delete:
      tags:
        - teaching_units
      summary: Delete teaching units by ID
      operationId: deleteTeachingUnits
      parameters:
        - name: id
          in: path
          description: ID of teaching units to delete
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            string:
              example: Teaching Units deleted successfully!
        '400':
          description: Invalid ID supplied
        '404':
          description: Teaching Units not found
        '500':
          description: Internal Server Error

  /follows:
    post:
      tags:
        - follow
      summary: Create a new follow
      operationId: addFollow
      requestBody:
        description: Create a new follow
        content:
          application/json:
            schema:
              type: object
              properties:
                id_student:
                  type: integer
                  example: 1
                id_teaching_units:
                  type: integer
                  example: 1
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Follow'
            application/xml:
              schema:
                $ref: '#/components/schemas/Follow'
        '405':
          description: Invalid input
        '500':
          description: Internal Server Error
    get:
      tags:
        - follow
      summary: Show all follows
      operationId: showAllFollows
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Follow'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Follow'
        '500':
          description: Internal Server Error
  /follows/{id}:
    get:
      tags:
        - follow
      summary: Find follow by id
      operationId: findFollow
      parameters:
        - name: id
          in: path
          description: ID of follow to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Follow'
            application/xml:
              schema:
                $ref: '#/components/schemas/Follow'
        '400':
          description: Invalid ID supplied
        '404':
          description: Follow not found
        '500':
          description: Internal Server Error
    put:
      tags:
        - follow
      summary: Update a follow
      operationId: updateFollow
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: Update a follow
        content:
          application/json:
            schema:
              type: object
              properties:
                id_student:
                  type: integer
                  example: 1
                id_teaching_units:
                  type: integer
                  example: 1
        required: true
      responses:
        '200':
          description: OK
          content:
            string:
              example: Follow updated successfully!
        '400':
          description: Invalid value
        '404':
          description: Follow not found
        '500':
          description: Internal Server Error
    delete:
      tags:
        - follow
      summary: Delete follow by ID
      operationId: deleteFollow
      parameters:
        - name: id
          in: path
          description: ID of follow to delete
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            string:
              example: Follow deleted successfully!
        '400':
          description: Invalid ID supplied
        '404':
          description: Follow not found
        '500':
          description: Internal Server Error

  /courses:
    post:
      tags:
        - course
      summary: Create a new course
      operationId: addCourse
      requestBody:
        description: Create a new course
        content:
          application/json:
            schema:
              type: object
              properties:
                date_time:
                  type: string
                  format: date-time
                  example: 2023-08-23T10:24:39
                id_teaching_units:
                  type: integer
                  example: 1
                id_group:
                  type: integer
                  example: 1
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Course'
            application/xml:
              schema:
                $ref: '#/components/schemas/Course'
        '405':
          description: Invalid input
        '500':
          description: Internal Server Error
    get:
      tags:
        - course
      summary: Show all courses
      operationId: showAllCourses
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Course'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Course'
        '500':
          description: Internal Server Error
  /courses/{id}:
    get:
      tags:
        - course
      summary: Find course by id
      operationId: findCourse
      parameters:
        - name: id
          in: path
          description: ID of course to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Course'
            application/xml:
              schema:
                $ref: '#/components/schemas/Course'
        '400':
          description: Invalid ID supplied
        '404':
          description: Course not found
        '500':
          description: Internal Server Error
    put:
      tags:
        - course
      summary: Update a course
      operationId: updateCourse
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: Update a course
        content:
          application/json:
            schema:
              type: object
              properties:
                date_time:
                  type: string
                  format: date-time
                  example: 2023-08-23T10:24:39
                id_teaching_units:
                  type: integer
                  example: 1
                id_group:
                  type: integer
                  example: 1
        required: true
      responses:
        '200':
          description: OK
          content:
            string:
              example: Course updated successfully!
        '400':
          description: Invalid value
        '404':
          description: Course not found
        '500':
          description: Internal Server Error
    delete:
      tags:
        - course
      summary: Delete course by ID
      operationId: deleteCourse
      parameters:
        - name: id
          in: path
          description: ID of course to delete
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            string:
              example: Course deleted successfully!
        '400':
          description: Invalid ID supplied
        '404':
          description: Course not found
        '500':
          description: Internal Server Error

  /absences:
    post:
      tags:
        - absence
      summary: Create a new absence
      operationId: addAbsence
      requestBody:
        description: Create a new absence
        content:
          application/json:
            schema:
              type: object
              properties:
                id_student:
                  type: integer
                  example: 1
                id_course:
                  type: integer
                  example: 1
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Absence'
            application/xml:
              schema:
                $ref: '#/components/schemas/Absence'
        '405':
          description: Invalid input
        '500':
          description: Internal Server Error
    get:
      tags:
        - absence
      summary: Show all absences
      operationId: showAllAbsences
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Absence'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Absence'
        '500':
          description: Internal Server Error
  /absences/{id}:
    get:
      tags:
        - absence
      summary: Find absence by id
      operationId: findAbsence
      parameters:
        - name: id
          in: path
          description: ID of absence to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Absence'
            application/xml:
              schema:
                $ref: '#/components/schemas/Absence'
        '400':
          description: Invalid ID supplied
        '404':
          description: Absence not found
        '500':
          description: Internal Server Error
    put:
      tags:
        - absence
      summary: Update a absence
      operationId: updateAbsence
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: Update an absence
        content:
          application/json:
            schema:
              type: object
              properties:
                id_student:
                  type: integer
                  example: 1
                id_course:
                  type: integer
                  example: 1
      responses:
        '200':
          description: OK
          content:
            string:
              example: Absence updated successfully!
        '400':
          description: Invalid value
        '404':
          description: Absence not found
        '500':
          description: Internal Server Error
    delete:
      tags:
        - absence
      summary: Delete absence by ID
      operationId: deleteAbsence
      parameters:
        - name: id
          in: path
          description: ID of absence to delete
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            string:
              example: Absence deleted successfully!
        '400':
          description: Invalid ID supplied
        '404':
          description: Absence not found
        '500':
          description: Internal Server Error

components:
  schemas:
    Group:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        ref:
          type: string
          example: G1
        creation_date:
          type: string
          format: date
          example: 2021-10-10
    Student:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        first_name:
          type: string
          example: Dera
        last_name:
          type: string
          example: Daniel
        gender:
          type: string
          example: Male
        ref:
          type: string
          example: STD22038
        email:
          type: string
          example: hei.dera.932@gmail.com
        phone:
          type: string
          example: 0340000000
    Teaching Units:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        name:
          type: string
          example: WEB1
    Follow:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        id_student:
          type: integer
          format: int64
          example: 1
        id_teaching_units:
          type: integer
          format: int64
          example: 1
    Course:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        date_time:
          type: string
          format: date-time
          example: 2023-03-03 06:06:56
        id_teaching_units:
          type: integer
          format: int64
          example: 1
        id_group:
          type: integer
          format: int64
          example: 1
    Absence:
      required:
        - name
        - photoUrls
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        id_student:
          type: integer
          format: int64
          example: 10
        id_course:
          type: integer
          format: int64
          example: 10
  securitySchemes:
    petstore_auth:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://petstore3.swagger.io/oauth/authorize
          scopes:
            write:pets: modify pets in your account
            read:pets: read your pets
    api_key:
      type: apiKey
      name: api_key
      in: header